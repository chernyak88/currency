{"version":3,"sources":["rateSources.js","components/QuoteView.jsx","App.jsx","index.jsx","components/QuoteView.module.css"],"names":["rateSources","func","fetch","then","res","json","data","currency","Valute","EUR","Name","rate","Value","nominal","Nominal","a","text","res1","parser","DOMParser","dom","parseFromString","eur","querySelector","innerHTML","QuoteView","props","className","s","error","App","state","mounted","intervalId","fetchNewRate","i","length","setState","console","this","setInterval","clearInterval","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yRAiCeA,G,MAjCK,CAEhB,CACIC,KAAM,WACF,OAAOC,MAAM,8CACRC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAMF,MALU,CACNC,SAAUD,EAAKE,OAAOC,IAAIC,KAC1BC,KAAML,EAAKE,OAAOC,IAAIG,MACtBC,QAASP,EAAKE,OAAOC,IAAIK,cAM7C,CACIb,KAAK,WAAD,4BAAE,oCAAAc,EAAA,sEACgBb,MAAM,+CADtB,cACIE,EADJ,gBAEiBA,EAAIY,OAFrB,cAEIC,EAFJ,OAGIC,EAAS,IAAIC,UACbC,EAAMF,EAAOG,gBAAgBJ,EAAM,mBACrCK,EAAM,CACNf,SAAUa,EAAIG,cAAc,uBAAuBC,UACnDb,KAAMS,EAAIG,cAAc,wBAAwBC,UAChDX,QAASO,EAAIG,cAAc,0BAA0BC,WARvD,kBAUKF,GAVL,4CAAF,kDAAC,M,gBCFEG,MAZf,SAAmBC,GACjB,OACE,yBAAKC,UAAWC,IAAEH,WACd,wDAAUC,EAAMnB,SAAhB,iLACA,4BACGmB,EAAMf,MAAQ,4BAAKe,EAAMb,QAAX,IAAqBa,EAAMnB,SAA3B,MAAwCmB,EAAMf,KAA9C,0CACbe,EAAMf,MAAQ,wBAAIgB,UAAWC,IAAEC,OAAjB,yJC+CXC,E,4MAlDbC,MAAQ,CACNxB,SAAU,GACVI,KAAM,GACNE,QAAS,I,EAGXmB,SAAU,E,EAEVC,WAAa,K,EAabC,a,sBAAe,8BAAAnB,EAAA,sDACJoB,EAAI,EADA,YACGA,EAAInC,EAAYoC,QADnB,0CAGOpC,EAAYmC,GAAGlC,OAHtB,UAGLqB,EAHK,OAIJ,EAAKU,QAJD,0DAOT,EAAKK,SAAS,CACZ9B,SAAUe,EAAIf,SACdI,KAAMW,EAAIX,KACVE,QAASS,EAAIT,UAVN,8DAcTyB,QAAQT,MAAM,wBAAd,MAdS,gCAC2BM,IAD3B,yE,kEAVbI,KAAKP,SAAU,EACfO,KAAKL,eACLK,KAAKN,WAAaO,YAAYD,KAAKL,aAAc,O,6CAIjDK,KAAKP,SAAU,EACfS,cAAcF,KAAKN,c,+BAwBnB,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,CAAWpB,SAAUgC,KAAKR,MAAMxB,SAAUI,KAAM4B,KAAKR,MAAMpB,KAAME,QAAS0B,KAAKR,MAAMlB,e,GA7C3E6B,IAAMC,WCAxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,4B","file":"static/js/main.40f89df6.chunk.js","sourcesContent":["const rateSources = [\r\n\r\n    {\r\n        func: () => {\r\n            return fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    let eur = {\r\n                        currency: data.Valute.EUR.Name,\r\n                        rate: data.Valute.EUR.Value,\r\n                        nominal: data.Valute.EUR.Nominal\r\n                    }\r\n                    return eur\r\n                })\r\n        }\r\n    },\r\n    {\r\n        func: async () => {\r\n            const res = await fetch('https://www.cbr-xml-daily.ru/daily_utf8.xml')\r\n            const res1 = await res.text()\r\n            const parser = new DOMParser()\r\n            const dom = parser.parseFromString(res1, \"application/xml\")\r\n            let eur = {\r\n                currency: dom.querySelector('*[ID=\"R01239\"] Name').innerHTML,\r\n                rate: dom.querySelector('*[ID=\"R01239\"] Value').innerHTML,\r\n                nominal: dom.querySelector('*[ID=\"R01239\"] Nominal').innerHTML\r\n            }\r\n            return eur\r\n        }\r\n    },\r\n\r\n]\r\n\r\nexport default rateSources","import React from 'react'\r\nimport s from './QuoteView.module.css'\r\n\r\nfunction QuoteView(props) {\r\n  return (\r\n    <div className={s.QuoteView}>\r\n        <h1>Курс {props.currency} по отношению к российскому рублю</h1>\r\n        <ul>\r\n          {props.rate && <li>{props.nominal} {props.currency} = {props.rate} рублей</li>}\r\n          {!props.rate && <li className={s.error}>сервис временно недоступен</li>}\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuoteView","import React from 'react'\nimport './App.css'\nimport rateSources from './rateSources'\nimport QuoteView from './components/QuoteView'\n\nclass App extends React.Component {\n  state = {\n    currency: '',\n    rate: '',\n    nominal: ''\n  }\n\n  mounted = false\n  \n  intervalId = null\n\n  componentDidMount() {\n    this.mounted = true\n    this.fetchNewRate()\n    this.intervalId = setInterval(this.fetchNewRate, 10 * 1000)\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n    clearInterval(this.intervalId)\n  }\n\n  fetchNewRate = async () => {\n    for (let i = 0; i < rateSources.length; i++) {\n      try {\n        let eur = await rateSources[i].func()\n        if (!this.mounted) {\n          break\n        }\n        this.setState({\n          currency: eur.currency,\n          rate: eur.rate,\n          nominal: eur.nominal\n        })\n        break\n      } catch(error) {\n        console.error('error when fetching: ', error)\n        continue\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <QuoteView currency={this.state.currency} rate={this.state.rate} nominal={this.state.nominal} />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuoteView\":\"QuoteView_QuoteView__1JAA9\",\"error\":\"QuoteView_error__3UnBm\"};"],"sourceRoot":""}